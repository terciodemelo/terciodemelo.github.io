[{"content":"Production Context Docker has been a very successful technology to build reproducible production environments. It doesn\u0026rsquo;t matter the hardware, nor the operating system, nor version of programming languages installed in the host machines. If it has Docker installed and you\u0026rsquo;re running your software in Docker you won\u0026rsquo;t, probably, have any compatibility issue. This can also be applied to development environment.\nA bit of history Over the years I\u0026rsquo;ve had the opportunity to deal with many ongoing projects in which the first issue was to be able to run them in my computer. All of us know this situation. You gotta install the right programming language version, the right development libs in the right version in your operating system, configure VPN to be able to connect to the development or staging database, or run the database in your local machine which means more dependency versions to deal with. You usually go installing stuff in your system that will eventually conflict with another project you may need to run or compile. At some point I decided I didn\u0026rsquo;t want to have to deal with it anymore, and thus in every project that I start and every ongoing project that I have to handle, the first thing that I do is to setup a development environment in Docker if none is already present.\nToday I bring to you the most basic example I have available in the open. It\u0026rsquo;s not a web server, nor any fancy CLI software, its just a script runner to make diagrams using Diagrams.\nSources All the sources are available in my diagrams-template repository that I\u0026rsquo;ve made to stop copy-pasting this template from project to project, and have a single source for it. At any project that I want to document with diagrams, I download this repo sources to a docs/ subdirectory or something like that.\nThere are actually only two pieces of code that are of special interest to us: the Dockerfile docs.dockerfile and the bash script make-diagrams. The usage of the project is explained in the repository\u0026rsquo;s README, so I won\u0026rsquo;t repeat myself here.\nDiving in docs.dockerfile The dockerfile sets up all dependencies that are needed to run the development environment smoothly. In our diagrams case all we need to run Diagrams is Python in the version we wanna use, Graphviz which is a Diagrams system-level dependency, poetry as our Python dependencies manager and a default working directory. None of this will have impact on the software that are directly installed in your host machine, and thus can even run projects with different, say, Python versions at the same time without monstruosities like pyenv.\n1 2 3 4 5 6 7 8 9  FROMpython:3.8.3-slimRUN apt update \u0026amp;\u0026amp; apt install -y graphviz curlRUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | pythonRUN echo \u0026#39;source $HOME/.poetry/env\u0026#39; \u0026gt;\u0026gt; ~/.bashrcADD . /root/workspaceWORKDIR/root/workspace  make-diagrams This is the cherry on top of the cake. Our \u0026ldquo;entrypoint\u0026rdquo; script is what we run; ./make-diagrams. When we run it no RUNNING_IN_DOCKER environment variable is set, and therefore we run a container from docs.dockerfile setting this enviroment variable, mounting the current working directory, and running the very same make-diagrams bash script. This will cause us to enter the else branch only once we are inside the container, an so run the commands we wanted to run all along.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #!/usr/bin/env bash  if [[ -z \u0026#34;$RUNNING_IN_DOCKER\u0026#34; ]]; then docker run --rm -it \\  -e RUNNING_IN_DOCKER=true \\  -v $(pwd):/root/workspace \\  -v /tmp/poetry-cache:/root/.cache \\  -w /root/workspace \\  $(docker build -q -f docs.dockerfile .) \\  ./make-diagrams else source ~/.bashrc poetry install for diagram in src/*; do if [[ \u0026#34;$diagram\u0026#34; != __init__* ]]; then poetry run python $diagram fi done fi   In this example its just running a bunch of poetry commands, but could be booting a web server, or a database, or queue, or any type of services and/or jobs.\nMore possibilities This type of recursive approach of running bash scripts combined with Docker can be generalized to do fancier stuff:\n In the above script I also mounted my local /tmp/poetry-cache directory to the container\u0026rsquo;s /root/.cache directory in order to not need to download all Python dependency packages over and over again. This can also be used to, say, reuse a database files directory to be able to preserve data over multiple usages as well Instead of a single container, you could run docker-compose or even Kubernetes local clusters using things like K3S or kind Instead of Docker as container engine, you could use other container engines, or even VMs  In the future I may bring more cool usages of this project organization paradigm.\n","description":"I'm here to talk about the very basics of building a development environment in Docker using my personal Diagrams template as example","id":2,"section":"posts","tags":["docker","development","diagrams","documentation"],"title":"Docker development environment 101","uri":"/posts/02-docker-dev-environment-101/"},{"content":"What this IS NOT about Hey there, it\u0026rsquo;s nice to have you here. I have a somewhat broad range of interests that I\u0026rsquo;d like to talk about on the internet, but I think that not every place is suitable for anything. For one, I\u0026rsquo;m quite into politics, but I won\u0026rsquo;t talk about it here, that\u0026rsquo;s for Facebook ¯\\_(ツ)_/¯. So, if you know me personally, rest assured I will not talk about politics in this website. I won\u0026rsquo;t talk about personal matters, culture, travels, etc.\nWhat this is about This blog is intended for professional subjects only. At least for now I believe that I will be talking mostly about tooling, distributed systems, computer networking, and technology in general. I plan to develop some series of blog posts: one-day builds, diving deep on technologies we take for granted, insights, small efforts for big gains, among others that will certainly come up along the way.\nSide effects Another outcome I expect with this platform is developing the habit of writing frequently. I\u0026rsquo;m writing a short stories series that may or may not become a book, another blog, comics, or nothing. To make the most out of this process I need to practice writing other subjects. The only kind of writing I\u0026rsquo;ve been doing in the past years have been commit messages and written communication with friends, family and co-workers; which are no good when you want to write essays or books.\nIf I focused only on writing these short stories, I wouldn\u0026rsquo;t be able to give them the quality they need. I must exercise writing extensively about multiple subjects to strengthen a long tail of abilities that will empower me to better handle edge cases on such my stories.\nOn the post frequency I\u0026rsquo;m not sure yet. As I write this post I\u0026rsquo;m on vacations, locked in home because of the COVID-19 pandemic; thus I\u0026rsquo;m quite free. What I want, though, is to have at least one new blog post a week. I believe that there will be times I will write multiple articles at once, and there will be hiatus in which I either will not have enough time to write, or may just won\u0026rsquo;t feel like writing; we\u0026rsquo;re gonna have to wait to see.\nEnglish only? Yes, probably. I have the option for internationalization, and I could at least translate the articles to Portuguese; my native language. But translation is a pain, a very time consuming activity that usually takes from me all the joy of writing. Perhaps as I develop this blogging habit translation will become easier. But I don\u0026rsquo;t make any promises.\nIs that all? I think so, for now. I\u0026rsquo;m tagging this article announcement, if you are interested in more like this, click on the tag just below the title. See ya!\n","description":"Initial post, with a brief overview of who I am, what this website is or isn't about","id":3,"section":"posts","tags":["announcement"],"title":"Hello World","uri":"/posts/01-hello-world/"},{"content":"  Hi, I\u0026rsquo;m Tercio, and I\u0026rsquo;m a software engineer currently located in the worderful city of Rio de Janeiro. Currently I fill the role of Site Reliability Engineer at VTEX working with workload orchestration, logging, automation, dev tooling, monitoring, database, load testing, and all that fun stuff that product developers usually don\u0026rsquo;t wanna touch.\nThis website has an evolving purpose of being my personal presentation to the world, containing a blog, my personal projects, and whatever else comes to fit here in the future.\n","description":"A personal Website","id":8,"section":"","tags":null,"title":"About","uri":"/about/"}]